from telegram.ext import ContextTypes
from config import get_session
from models import User
import logging
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

class SystemMonitor:
    """–ö–ª–∞—Å—Å –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"""
    
    @staticmethod
    async def log_action(
        context: ContextTypes.DEFAULT_TYPE,
        action_type: str,
        user_id: int,
        details: str
    ):
        """
        –õ–æ–≥–∏—Ä—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –≤ —Å–∏—Å—Ç–µ–º–µ –∏ —É–≤–µ–¥–æ–º–ª—è–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        
        :param context: –ö–æ–Ω—Ç–µ–∫—Å—Ç —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞
        :param action_type: –¢–∏–ø –¥–µ–π—Å—Ç–≤–∏—è (vacation_request, approval, registration, etc.)
        :param user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–≤–µ—Ä—à–∏–≤—à–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏–µ
        :param details: –î–µ—Ç–∞–ª–∏ –¥–µ–π—Å—Ç–≤–∏—è
        """
        session = get_session()
        try:
            user = session.query(User).filter_by(telegram_id=user_id).first()
            user_name = user.full_name if user else f"Unknown User (ID: {user_id})"
            
            # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
            log_message = f"ACTION: {action_type} | USER: {user_name} | DETAILS: {details}"
            logger.info(log_message)
            
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
            admins = session.query(User).filter_by(is_admin=True).all()
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
            admin_message = (
                f"üîî –ù–æ–≤–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ —Å–∏—Å—Ç–µ–º–µ\n\n"
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_name}\n"
                f"üìù –î–µ–π—Å—Ç–≤–∏–µ: {action_type}\n"
                f"‚ÑπÔ∏è –î–µ—Ç–∞–ª–∏: {details}\n"
                f"üïí –í—Ä–µ–º—è: {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}"
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–∞–∂–¥–æ–º—É –∞–¥–º–∏–Ω—É
            for admin in admins:
                try:
                    await context.bot.send_message(
                        chat_id=admin.telegram_id,
                        text=admin_message
                    )
                except Exception as e:
                    logger.error(f"Failed to notify admin {admin.full_name}: {e}")
                    
        except Exception as e:
            logger.error(f"Error in log_action: {e}")
        finally:
            session.close()

# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å
__all__ = ['SystemMonitor']
